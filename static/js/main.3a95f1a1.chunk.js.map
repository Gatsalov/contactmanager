{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/test/Test.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContatInfo","deleteClickHandler","delete","e","_this2","_this$props$contact","name","email","phone","context","className","onClick","onShowClick","bind","style","cursor","float","color","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","deleteClick","deleteContact","TextInputGroup","_ref","placeholder","onChange","label","error","htmlFor","classnames","is-invalid ","defaultProps","AddContact","errors","defineProperty","target","addContact","dispath","_this$state","errorFlag","prop","newContact","res","preventDefault","abrupt","post","console","log","history","push","_this$state2","onSubmit","layout_TextInputGroup","EditContact","match","params","put","Header","branding","Test","About","NotFound","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a95f1a1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action)=>{\n  // debugger\n    switch(action.type){\n      case 'DELETE_CONTACT':\n        return{\n          ...state,\n          contacts: state.contacts.filter( contact => contact.id !==action.payload)\n        };\n      case 'ADD_CONTACT':\n        return{\n          ...state,\n          contacts: [...state.contacts, action.payload]\n        };\n      case 'UPDATE_CONTACT':\n        return{\n          ...state,\n          contacts: state.contacts.map((contact)=> contact.id === action.payload.id ? action.payload : contact)\n        };\n      default:\n        return state;\n    }\n  }\n\n\nexport class Provider extends Component {\n\n  state = {\n      contacts: [],\n        dispatch: action => {\n          this.setState(reducer(this.state, action))\n        }\n      }\n  \n\n  async componentDidMount(){\n    const response = await axios.get('https://jsonplaceholder.typicode.com/users')\n    this.setState({contacts: response.data})\n  }\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Contact extends Component {\nstate = {\n  showContatInfo: false\n};\nonShowClick(e){\n  this.setState({\n    showContatInfo: !this.state.showContatInfo\n  })\n}\ndeleteClickHandler = async (dispatch, id)=>{\n  // try{\n    // debugger\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n    dispatch({type: 'DELETE_CONTACT', payload: id})\n  // }catch{\n    // dispatch({type: 'DELETE_CONTACT', payload: id})\n  // }\n}\n  render() {\n    const { id, name, email, phone} = this.props.contact;\n    const { showContatInfo } = this.state;\n    return (\n      <Consumer>\n        {context=>{\n          const {dispatch} = context;\n          return(\n            <div  className=\"card card-body mb-3\">\n              <h4> {name} \n                <i onClick={this.onShowClick.bind(this)} className=\"fas fa-sort-down\" style={{cursor: 'pointer'}}></i>\n                <i className=\"fas fa-times\" style={{cursor: 'pointer', float: 'right', color: 'red'}} onClick={this.deleteClickHandler.bind(this, dispatch, id)}></i>\n                <Link to={`/contacts/edit/${id}`}>\n                  <i className=\"fas fa-pencil-alt\" style={{cursor: 'pointer', float: 'right', color: 'black', marginRight: '1rem'}}></i>\n                </Link>\n              </h4>\n              { showContatInfo ? <ul className=\"list-group\">\n                <li className=\"list-group-item\">Email: {email}</li>\n                <li className=\"list-group-item\">Phone: {phone}</li>\n              </ul> : null}\n              \n            </div>\n            )\n          }\n        }\n      </Consumer>\n    );\n  }\n}\n\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired\n  }\nexport default Contact;\n\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass Contacts extends Component {\n \n  deleteContact (id){\n    // console.log(this)\n   return 'qweretyu' + id\n  }\n  render() {\n    return (\n      <Consumer>\n        {(context)=>{\n          const { contacts } = context;\n          return(\n              <React.Fragment>\n              <h1 className=\"display-4\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n                {contacts.map(contact=>(\n                      <Contact key={contact.id} contact={contact} deleteClick={this.deleteContact.bind(this,contact.id)}/>\n                ))}\n              </React.Fragment>\n            )\n          }\n        }\n      </Consumer>\n    );\n  }\n}\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup  = ({ value, placeholder, name, onChange, label, type, error})=>{\n  // console.log(value, placeholder, name, onChange, label, type, error)\n  return(\n      <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <input \n          type={type} \n          className={classnames(\"form-control form-control-lg\", {\"is-invalid \": error})}\n          name={name}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n          />\n          {error && <div className=\"invalid-feedback\">{error}</div> }\n            \n          \n      </div>\n    )\n}\n\nTextInputGroup.propTypes = {\n  value: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired\n}\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n}\nexport default TextInputGroup;\n\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport uuid from 'uuid';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n \n  onChange =(e)=>{\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  \n  addContact = async (dispath,e)=>{\n    e.preventDefault();\n    const { name, email, phone, errors } = this.state;\n    let errorFlag = false;\n    for(let prop in this.state){\n      if(this.state[prop] === ''){\n        errorFlag = true;\n        errors[prop] = 'This fild is required!'\n      }else{\n        errors[prop] = ''\n      }\n    }\n    if(errorFlag){\n      this.setState({errors})\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    }\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n    console.log(res.data)\n    dispath({type: 'ADD_CONTACT', payload: res.data})\n    this.setState({\n      id:'',\n      name:'',\n      email:'',\n      phone:'',\n      errors: {}\n    })\n    this.props.history.push('/')\n    // console.log(this.state)\n  }\n  render() {\n    const {name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value =>{\n          const { dispatch } = value;\n          return(\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.addContact.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={ this.onChange }\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={ this.onChange }\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={ this.onChange }\n                    error={errors.phone}\n                  />\n                  <input type=\"submit\" \n                    value=\"Add Contact\" \n                    className=\"btn btn-light btn-block\"\n                    style={{cursor: \"pointer\"}}/>\n                </form>\n              </div>\n            </div>\n            )\n          }\n        }\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\n// import uuid from 'uuid';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\n\nclass EditContact extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n \n  onChange =(e)=>{\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  async componentDidMount(){\n    const { id } = this.props.match.params;\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    })\n\n  }\n\n  addContact = async (dispath,e)=>{\n    e.preventDefault();\n    const { name, email, phone, errors } = this.state;\n    let errorFlag = false;\n    for(let prop in this.state){\n      if(this.state[prop] === ''){\n        errorFlag = true;\n        errors[prop] = 'This fild is required!'\n      }else{\n        errors[prop] = ''\n      }\n    }\n    if(errorFlag){\n      this.setState({errors})\n      return;\n    }\n\n    let { id } = this.props.match.params;\n    const newContact = {\n      name,\n      email,\n      phone\n    }\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, newContact);\n    console.log(res.data)\n    dispath({type: 'UPDATE_CONTACT', payload: res.data})\n    this.setState({\n      id:'',\n      name:'',\n      email:'',\n      phone:'',\n      errors: {}\n    })\n    this.props.history.push('/')\n    // console.log(this.state)\n  }\n  render() {\n    const {name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value =>{\n          const { dispatch } = value;\n          return(\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.addContact.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={ this.onChange }\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={ this.onChange }\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={ this.onChange }\n                    error={errors.phone}\n                  />\n                  <input type=\"submit\" \n                    value=\"Update Contact\" \n                    className=\"btn btn-light btn-block\"\n                    style={{cursor: \"pointer\"}}/>\n                </form>\n              </div>\n            </div>\n            )\n          }\n        }\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;","import React from 'react';\nimport ProtTypes  from 'prop-types';\nimport {Link} from 'react-router-dom'\n\nconst Header = (props)=>{\n  const { branding } = props\n  return(\n      \n      <nav className=\"navbar navbar-expend-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n          <Link to=\"/\" className=\"navbar-brand\">{branding}</Link>\n          <div>\n            <ul className=\"navbar-nav mr-auto flex-row\">\n              <li className=\"nav-item mx-1\">\n                <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i> Home</Link>\n              </li>\n              <li className=\"nav-item mx-1\">\n                <Link to=\"/contacts/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i> Add</Link>\n              </li>\n              <li className=\"nav-item mx-1\">\n                <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i> About</Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    )\n}\n\nHeader.defaultProps = {\n  branding: \"My app\"\n}\n\nHeader.propTypes = {\n  branding: ProtTypes.string.isRequired\n}\nexport default Header;","import React, { Component } from 'react';\n\nclass Test extends Component {\n  componentDidMount(){\n    console.log(\"Component did mounted\")\n  }\n  render() {\n    return (\n      <div>\n        <h1> Test Page</h1>\n      </div>\n    );\n  }\n}\nexport default Test;","import React from 'react';\n\nconst About = ()=>{\n    return (\n      <div>\n        <h1 className=\"display-4\">About Contact Manager</h1>\n        <p className=\"lead\">Simple app to manage contact</p>\n        <p className=\"text-secondary\">Version 1.0.0</p>\n      </div>\n    );\n}\nexport default About;","import React from 'react';\n\nconst NotFound = ()=> {\n  return (\n    <div>\n      <h4 className=\"display-4\"><span className=\"text-denger\">404</span> Page not found</h4>\n      <p className=\"lead\">This page not exists</p>\n    </div>\n  );\n}\nexport default NotFound;","import React, { Component } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport Test from './components/test/Test';\nimport { Provider } from './context';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"The Contact Manager\"/>\n            <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}/>\n              <Route exact path=\"/contacts/add\" component={AddContact}/>\n              <Route exact path=\"/contacts/edit/:id\" component={EditContact}/>\n              <Route exact path=\"/about\" component={About}/>\n              <Route exact path=\"/test\" component={Test}/>\n              <Route component={NotFound}/>\n            </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}